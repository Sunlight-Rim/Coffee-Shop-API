// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package rest

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest(in *jlexer.Lexer, out *User) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "username":
			out.Username = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "phone":
			out.Phone = uint64(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest(out *jwriter.Writer, in User) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.Phone))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v User) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v User) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *User) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *User) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest1(in *jlexer.Lexer, out *SignupRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.UserID = uint64(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest1(out *jwriter.Writer, in SignupRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignupRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignupRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignupRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignupRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest1(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest2(in *jlexer.Lexer, out *SignupReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "phone":
			out.Phone = uint64(in.Uint64())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest2(out *jwriter.Writer, in SignupReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.Phone))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignupReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignupReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignupReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignupReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest2(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest3(in *jlexer.Lexer, out *SignoutAllRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "refresh_tokens":
			if in.IsNull() {
				in.Skip()
				out.RefreshTokens = nil
			} else {
				in.Delim('[')
				if out.RefreshTokens == nil {
					if !in.IsDelim(']') {
						out.RefreshTokens = make([]string, 0, 4)
					} else {
						out.RefreshTokens = []string{}
					}
				} else {
					out.RefreshTokens = (out.RefreshTokens)[:0]
				}
				for !in.IsDelim(']') {
					var v1 string
					v1 = string(in.String())
					out.RefreshTokens = append(out.RefreshTokens, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest3(out *jwriter.Writer, in SignoutAllRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"refresh_tokens\":"
		out.RawString(prefix[1:])
		if in.RefreshTokens == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.RefreshTokens {
				if v2 > 0 {
					out.RawByte(',')
				}
				out.String(string(v3))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignoutAllRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignoutAllRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignoutAllRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignoutAllRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest3(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest4(in *jlexer.Lexer, out *SignoutAllReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest4(out *jwriter.Writer, in SignoutAllReq) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignoutAllReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignoutAllReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignoutAllReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignoutAllReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest4(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest5(in *jlexer.Lexer, out *SigninReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest5(out *jwriter.Writer, in SigninReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SigninReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SigninReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SigninReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SigninReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest5(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest6(in *jlexer.Lexer, out *RefreshReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "RefreshToken":
			out.RefreshToken = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest6(out *jwriter.Writer, in RefreshReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"RefreshToken\":"
		out.RawString(prefix[1:])
		out.String(string(in.RefreshToken))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RefreshReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RefreshReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RefreshReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RefreshReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest6(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest7(in *jlexer.Lexer, out *GetMeRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			(out.User).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest7(out *jwriter.Writer, in GetMeRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		(in.User).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetMeRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetMeRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetMeRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetMeRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest7(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest8(in *jlexer.Lexer, out *GetMeReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest8(out *jwriter.Writer, in GetMeReq) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetMeReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetMeReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetMeReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetMeReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest8(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest9(in *jlexer.Lexer, out *DeleteMeRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			(out.User).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest9(out *jwriter.Writer, in DeleteMeRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		(in.User).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteMeRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteMeRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteMeRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteMeRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest9(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest10(in *jlexer.Lexer, out *DeleteMeReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest10(out *jwriter.Writer, in DeleteMeReq) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteMeReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteMeReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteMeReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteMeReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest10(l, v)
}
func easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest11(in *jlexer.Lexer, out *ChangePasswordReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "new_password":
			out.NewPassword = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest11(out *jwriter.Writer, in ChangePasswordReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"new_password\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.NewPassword))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChangePasswordReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChangePasswordReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonDfb66c62EncodeCoffeeshopApiInternalServiceUsersDeliveryRest11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChangePasswordReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChangePasswordReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonDfb66c62DecodeCoffeeshopApiInternalServiceUsersDeliveryRest11(l, v)
}
