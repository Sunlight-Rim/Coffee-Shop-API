// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package model

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel(in *jlexer.Lexer, out *User) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "username":
			out.Username = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "phone":
			out.Phone = uint64(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel(out *jwriter.Writer, in User) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.Phone))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v User) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v User) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *User) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *User) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel1(in *jlexer.Lexer, out *SignupResDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.UserID = uint64(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel1(out *jwriter.Writer, in SignupResDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignupResDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignupResDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignupResDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignupResDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel1(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel2(in *jlexer.Lexer, out *SignupReqDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "phone":
			out.Phone = uint64(in.Uint64())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel2(out *jwriter.Writer, in SignupReqDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.Phone))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignupReqDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignupReqDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignupReqDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignupReqDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel2(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel3(in *jlexer.Lexer, out *SignoutAllResDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "refresh_tokens":
			if in.IsNull() {
				in.Skip()
				out.RefreshTokens = nil
			} else {
				in.Delim('[')
				if out.RefreshTokens == nil {
					if !in.IsDelim(']') {
						out.RefreshTokens = make([]string, 0, 4)
					} else {
						out.RefreshTokens = []string{}
					}
				} else {
					out.RefreshTokens = (out.RefreshTokens)[:0]
				}
				for !in.IsDelim(']') {
					var v1 string
					v1 = string(in.String())
					out.RefreshTokens = append(out.RefreshTokens, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel3(out *jwriter.Writer, in SignoutAllResDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"refresh_tokens\":"
		out.RawString(prefix[1:])
		if in.RefreshTokens == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.RefreshTokens {
				if v2 > 0 {
					out.RawByte(',')
				}
				out.String(string(v3))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignoutAllResDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignoutAllResDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignoutAllResDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignoutAllResDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel3(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel4(in *jlexer.Lexer, out *SignoutAllReqDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel4(out *jwriter.Writer, in SignoutAllReqDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SignoutAllReqDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignoutAllReqDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SignoutAllReqDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignoutAllReqDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel4(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel5(in *jlexer.Lexer, out *SigninReqDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel5(out *jwriter.Writer, in SigninReqDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SigninReqDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SigninReqDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SigninReqDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SigninReqDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel5(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel6(in *jlexer.Lexer, out *RefreshReqDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "RefreshToken":
			out.RefreshToken = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel6(out *jwriter.Writer, in RefreshReqDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"RefreshToken\":"
		out.RawString(prefix[1:])
		out.String(string(in.RefreshToken))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RefreshReqDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RefreshReqDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RefreshReqDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RefreshReqDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel6(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel7(in *jlexer.Lexer, out *GetMeResDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				(*out.User).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel7(out *jwriter.Writer, in GetMeResDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			(*in.User).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetMeResDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetMeResDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetMeResDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetMeResDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel7(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel8(in *jlexer.Lexer, out *GetMeReqDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel8(out *jwriter.Writer, in GetMeReqDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetMeReqDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetMeReqDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetMeReqDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetMeReqDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel8(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel9(in *jlexer.Lexer, out *DeleteMeResDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				(*out.User).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel9(out *jwriter.Writer, in DeleteMeResDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			(*in.User).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteMeResDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteMeResDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteMeResDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteMeResDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel9(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel10(in *jlexer.Lexer, out *DeleteMeReqDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel10(out *jwriter.Writer, in DeleteMeReqDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteMeReqDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteMeReqDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteMeReqDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteMeReqDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel10(l, v)
}
func easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel11(in *jlexer.Lexer, out *ChangePasswordReqDelivery) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "new_password":
			out.NewPassword = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel11(out *jwriter.Writer, in ChangePasswordReqDelivery) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"new_password\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.NewPassword))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChangePasswordReqDelivery) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChangePasswordReqDelivery) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeCoffeeshopApiInternalServiceUsersModel11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChangePasswordReqDelivery) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChangePasswordReqDelivery) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeCoffeeshopApiInternalServiceUsersModel11(l, v)
}
